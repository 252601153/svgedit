{"version":3,"file":"ext-eyedropper.js","sources":["../../../src/editor/extensions/ext-eyedropper.js"],"sourcesContent":["/**\n * @file ext-eyedropper.js\n *\n * @license MIT\n *\n * @copyright 2010 Jeff Schiller\n *\n */\n\nexport default {\n  name: 'eyedropper',\n  async init (S) {\n    const strings = await S.importLocale();\n    const svgEditor = this;\n    const {$, ChangeElementCommand} = S, // , svgcontent,\n      // svgdoc = S.svgroot.parentNode.ownerDocument,\n      svgCanvas = svgEditor.canvas,\n      addToHistory = function (cmd) { svgCanvas.undoMgr.addCommandToHistory(cmd); },\n      currentStyle = {\n        fillPaint: 'red', fillOpacity: 1.0,\n        strokePaint: 'black', strokeOpacity: 1.0,\n        strokeWidth: 5, strokeDashArray: null,\n        opacity: 1.0,\n        strokeLinecap: 'butt',\n        strokeLinejoin: 'miter'\n      };\n\n    /**\n     *\n     * @param {module:svgcanvas.SvgCanvas#event:ext_selectedChanged|module:svgcanvas.SvgCanvas#event:ext_elementChanged} opts\n     * @returns {void}\n     */\n    function getStyle (opts) {\n      // if we are in eyedropper mode, we don't want to disable the eye-dropper tool\n      const mode = svgCanvas.getMode();\n      if (mode === 'eyedropper') { return; }\n\n      const tool = $('#tool_eyedropper');\n      // enable-eye-dropper if one element is selected\n      let elem = null;\n      if (!opts.multiselected && opts.elems[0] &&\n        !['svg', 'g', 'use'].includes(opts.elems[0].nodeName)\n      ) {\n        elem = opts.elems[0];\n        tool.removeClass('disabled');\n        // grab the current style\n        currentStyle.fillPaint = elem.getAttribute('fill') || 'black';\n        currentStyle.fillOpacity = elem.getAttribute('fill-opacity') || 1.0;\n        currentStyle.strokePaint = elem.getAttribute('stroke');\n        currentStyle.strokeOpacity = elem.getAttribute('stroke-opacity') || 1.0;\n        currentStyle.strokeWidth = elem.getAttribute('stroke-width');\n        currentStyle.strokeDashArray = elem.getAttribute('stroke-dasharray');\n        currentStyle.strokeLinecap = elem.getAttribute('stroke-linecap');\n        currentStyle.strokeLinejoin = elem.getAttribute('stroke-linejoin');\n        currentStyle.opacity = elem.getAttribute('opacity') || 1.0;\n      // disable eye-dropper tool\n      } else {\n        tool.addClass('disabled');\n      }\n    }\n\n    const buttons = [\n      {\n        id: 'tool_eyedropper',\n        icon: 'eyedropper.png',\n        type: 'mode',\n        events: {\n          click () {\n            svgCanvas.setMode('eyedropper');\n          }\n        }\n      }\n    ];\n\n    return {\n      name: strings.name,\n      svgicons: 'eyedropper-icon.xml',\n      buttons: strings.buttons.map((button, i) => {\n        return Object.assign(buttons[i], button);\n      }),\n\n      // if we have selected an element, grab its paint and enable the eye dropper button\n      selectedChanged: getStyle,\n      elementChanged: getStyle,\n\n      mouseDown (opts) {\n        const mode = svgCanvas.getMode();\n        if (mode === 'eyedropper') {\n          const e = opts.event;\n          const {target} = e;\n          if (!['svg', 'g', 'use'].includes(target.nodeName)) {\n            const changes = {};\n\n            const change = function (elem, attrname, newvalue) {\n              changes[attrname] = elem.getAttribute(attrname);\n              elem.setAttribute(attrname, newvalue);\n            };\n\n            if (currentStyle.fillPaint) { change(target, 'fill', currentStyle.fillPaint); }\n            if (currentStyle.fillOpacity) { change(target, 'fill-opacity', currentStyle.fillOpacity); }\n            if (currentStyle.strokePaint) { change(target, 'stroke', currentStyle.strokePaint); }\n            if (currentStyle.strokeOpacity) { change(target, 'stroke-opacity', currentStyle.strokeOpacity); }\n            if (currentStyle.strokeWidth) { change(target, 'stroke-width', currentStyle.strokeWidth); }\n            if (currentStyle.strokeDashArray) { change(target, 'stroke-dasharray', currentStyle.strokeDashArray); }\n            if (currentStyle.opacity) { change(target, 'opacity', currentStyle.opacity); }\n            if (currentStyle.strokeLinecap) { change(target, 'stroke-linecap', currentStyle.strokeLinecap); }\n            if (currentStyle.strokeLinejoin) { change(target, 'stroke-linejoin', currentStyle.strokeLinejoin); }\n\n            addToHistory(new ChangeElementCommand(target, changes));\n          }\n        }\n      }\n    };\n  }\n};\n"],"names":["name","init","S","getStyle","opts","svgCanvas","getMode","tool","$","elem","multiselected","elems","includes","nodeName","addClass","removeClass","currentStyle","fillPaint","getAttribute","fillOpacity","strokePaint","strokeOpacity","strokeWidth","strokeDashArray","strokeLinecap","strokeLinejoin","opacity","importLocale","strings","svgEditor","_this","ChangeElementCommand","canvas","addToHistory","cmd","undoMgr","addCommandToHistory","buttons","id","icon","type","events","click","setMode","svgicons","map","button","i","Object","assign","selectedChanged","elementChanged","mouseDown","target","event","changes","change","attrname","newvalue","setAttribute"],"mappings":";;;;;;;;;AASA,MAAe,CACbA,KAAM,aACAC,mBAAMC,wWAqBDC,oGAAAA,qBAAUC,MAGJ,eADAC,EAAUC,eAGjBC,EAAOC,EAAE,oBAEXC,EAAO,KACNL,EAAKM,gBAAiBN,EAAKO,MAAM,IACnC,CAAC,MAAO,IAAK,OAAOC,SAASR,EAAKO,MAAM,GAAGE,UAgB5CN,EAAKO,SAAS,aAddL,EAAOL,EAAKO,MAAM,GAClBJ,EAAKQ,YAAY,YAEjBC,EAAaC,UAAYR,EAAKS,aAAa,SAAW,QACtDF,EAAaG,YAAcV,EAAKS,aAAa,iBAAmB,EAChEF,EAAaI,YAAcX,EAAKS,aAAa,UAC7CF,EAAaK,cAAgBZ,EAAKS,aAAa,mBAAqB,EACpEF,EAAaM,YAAcb,EAAKS,aAAa,gBAC7CF,EAAaO,gBAAkBd,EAAKS,aAAa,oBACjDF,EAAaQ,cAAgBf,EAAKS,aAAa,kBAC/CF,EAAaS,eAAiBhB,EAAKS,aAAa,mBAChDF,EAAaU,QAAUjB,EAAKS,aAAa,YAAc,cA1CrChB,EAAEyB,6BAAlBC,SACAC,EAAYC,EACXtB,EAA2BN,EAA3BM,EAAGuB,EAAwB7B,EAAxB6B,qBAER1B,EAAYwB,EAAUG,OACtBC,EAAe,SAAfA,aAAyBC,GAAO7B,EAAU8B,QAAQC,oBAAoBF,IACtElB,EAAe,CACbC,UAAW,MAAOE,YAAa,EAC/BC,YAAa,QAASC,cAAe,EACrCC,YAAa,EAAGC,gBAAiB,KACjCG,QAAS,EACTF,cAAe,OACfC,eAAgB,SAqCdY,EAAU,CACd,CACEC,GAAI,kBACJC,KAAM,iBACNC,KAAM,OACNC,OAAQ,CACNC,uBACErC,EAAUsC,QAAQ,oCAMnB,CACL3C,KAAM4B,EAAQ5B,KACd4C,SAAU,sBACVP,QAAST,EAAQS,QAAQQ,KAAI,SAACC,EAAQC,UAC7BC,OAAOC,OAAOZ,EAAQU,GAAID,MAInCI,gBAAiB/C,EACjBgD,eAAgBhD,EAEhBiD,6BAAWhD,MAEI,eADAC,EAAUC,UACI,KAElB+C,EADGjD,EAAKkD,MACRD,WACF,CAAC,MAAO,IAAK,OAAOzC,SAASyC,EAAOxC,UAAW,KAC5C0C,EAAU,GAEVC,EAAS,SAATA,OAAmB/C,EAAMgD,EAAUC,GACvCH,EAAQE,GAAYhD,EAAKS,aAAauC,GACtChD,EAAKkD,aAAaF,EAAUC,IAG1B1C,EAAaC,WAAauC,EAAOH,EAAQ,OAAQrC,EAAaC,WAC9DD,EAAaG,aAAeqC,EAAOH,EAAQ,eAAgBrC,EAAaG,aACxEH,EAAaI,aAAeoC,EAAOH,EAAQ,SAAUrC,EAAaI,aAClEJ,EAAaK,eAAiBmC,EAAOH,EAAQ,iBAAkBrC,EAAaK,eAC5EL,EAAaM,aAAekC,EAAOH,EAAQ,eAAgBrC,EAAaM,aACxEN,EAAaO,iBAAmBiC,EAAOH,EAAQ,mBAAoBrC,EAAaO,iBAChFP,EAAaU,SAAW8B,EAAOH,EAAQ,UAAWrC,EAAaU,SAC/DV,EAAaQ,eAAiBgC,EAAOH,EAAQ,iBAAkBrC,EAAaQ,eAC5ER,EAAaS,gBAAkB+B,EAAOH,EAAQ,kBAAmBrC,EAAaS,gBAElFQ,EAAa,IAAIF,EAAqBsB,EAAQE"}