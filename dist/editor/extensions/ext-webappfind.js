function _AwaitValue(e){this.wrapped=e}function _AsyncGenerator(e){var n,t;function resume(n,t){try{var r=e[n](t),o=r.value,a=o instanceof _AwaitValue;Promise.resolve(a?o.wrapped:o).then((function(e){a?resume("return"===n?"return":"next",e):settle(r.done?"return":"normal",e)}),(function(e){resume("throw",e)}))}catch(e){settle("throw",e)}}function settle(e,r){switch(e){case"return":n.resolve({value:r,done:!0});break;case"throw":n.reject(r);break;default:n.resolve({value:r,done:!1})}(n=n.next)?resume(n.key,n.arg):t=null}this._invoke=function send(e,r){return new Promise((function(o,a){var i={key:e,arg:r,resolve:o,reject:a,next:null};t?t=t.next=i:(n=t=i,resume(e,r))}))},"function"!=typeof e.return&&(this.return=void 0)}function asyncGeneratorStep(e,n,t,r,o,a,i){try{var c=e[a](i),u=c.value}catch(e){return void t(e)}c.done?n(u):Promise.resolve(u).then(r,o)}"function"==typeof Symbol&&Symbol.asyncIterator&&(_AsyncGenerator.prototype[Symbol.asyncIterator]=function(){return this}),_AsyncGenerator.prototype.next=function(e){return this._invoke("next",e)},_AsyncGenerator.prototype.throw=function(e){return this._invoke("throw",e)},_AsyncGenerator.prototype.return=function(e){return this._invoke("return",e)};
/**
* Depends on Firefox add-on and executables from
* {@link https://github.com/brettz9/webappfind}.
* @author Brett Zamir
* @license MIT
* @todo See WebAppFind Readme for SVG-related todos
*/
var e={name:"webappfind",init:function init(e){var n=this;return function _asyncToGenerator(e){return function(){var n=this,t=arguments;return new Promise((function(r,o){var a=e.apply(n,t);function _next(e){asyncGeneratorStep(a,r,o,_next,_throw,"next",e)}function _throw(e){asyncGeneratorStep(a,r,o,_next,_throw,"throw",e)}_next(void 0)}))}}(regeneratorRuntime.mark((function _callee(){var t,r,o,a,i,c,u,s;return regeneratorRuntime.wrap((function _callee$(p){for(;;)switch(p.prev=p.next){case 0:return t=e.importLocale,r=e.$,p.next=3,t();case 3:return o=p.sent,a=n,"read",c=["read",i="save"],n.canvas.bind("message",(function(e,n){var t,o,i=n.data,s=n.origin;try{var p=i.webappfind;if(t=p.type,u=p.pathID,o=p.content,s!==location.origin||c.includes(t))return}catch(e){return}switch(t){case"view":a.loadFromString(o);break;case"save-end":r.alert("save complete for pathID ".concat(u,"!"));break;default:throw new Error("Unexpected WebAppFind event type")}})),s=[{id:"webappfind_save",icon:"webappfind.png",type:"app_menu",position:4,events:{click:function click(){u&&window.postMessage({webappfind:{type:i,pathID:u,content:a.canvas.getSvgString()}},"null"===window.location.origin?"*":window.location.origin)}}}],p.abrupt("return",{name:o.name,svgicons:"webappfind-icon.svg",buttons:o.buttons.map((function(e,n){return Object.assign(s[n],e)}))});case 9:case"end":return p.stop()}}),_callee)})))()}};export default e;
//# sourceMappingURL=ext-webappfind.js.map
