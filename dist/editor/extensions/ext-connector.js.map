{"version":3,"file":"ext-connector.js","sources":["../../../src/editor/extensions/ext-connector.js"],"sourcesContent":["/**\n * @file ext-connector.js\n *\n * @license MIT\n *\n * @copyright 2010 Alexis Deveria\n *\n */\n\nexport default {\n  name: 'connector',\n  async init (S) {\n    const svgEditor = this;\n    const svgCanvas = svgEditor.canvas;\n    const {getElem} = svgCanvas;\n    const {$, svgroot, importLocale} = S,\n      addElem = svgCanvas.addSVGElementFromJson,\n      selManager = S.selectorManager,\n      connSel = '.se_connector',\n      // connect_str = '-SE_CONNECT-',\n      elData = $.data;\n    const strings = await importLocale();\n\n    let startX,\n      startY,\n      curLine,\n      startElem,\n      endElem,\n      seNs,\n      {svgcontent} = S,\n      started = false,\n      connections = [],\n      selElems = [];\n\n    /**\n     *\n     * @param {Float} x\n     * @param {Float} y\n     * @param {module:utilities.BBoxObject} bb\n     * @param {Float} offset\n     * @returns {module:math.XYObject}\n     */\n    function getBBintersect (x, y, bb, offset) {\n      if (offset) {\n        offset -= 0;\n        bb = $.extend({}, bb);\n        bb.width += offset;\n        bb.height += offset;\n        bb.x -= offset / 2;\n        bb.y -= offset / 2;\n      }\n\n      const midX = bb.x + bb.width / 2;\n      const midY = bb.y + bb.height / 2;\n      const lenX = x - midX;\n      const lenY = y - midY;\n\n      const slope = Math.abs(lenY / lenX);\n\n      let ratio;\n      if (slope < bb.height / bb.width) {\n        ratio = (bb.width / 2) / Math.abs(lenX);\n      } else {\n        ratio = lenY\n          ? (bb.height / 2) / Math.abs(lenY)\n          : 0;\n      }\n\n      return {\n        x: midX + lenX * ratio,\n        y: midY + lenY * ratio\n      };\n    }\n\n    /**\n    * @param {\"start\"|\"end\"} side\n    * @param {Element} line\n    * @returns {Float}\n    */\n    function getOffset (side, line) {\n      const giveOffset = line.getAttribute('marker-' + side);\n      // const giveOffset = $(line).data(side+'_off');\n\n      // TODO: Make this number (5) be based on marker width/height\n      const size = line.getAttribute('stroke-width') * 5;\n      return giveOffset ? size : 0;\n    }\n\n    /**\n    * @param {boolean} on\n    * @returns {void}\n    */\n    function showPanel (on) {\n      let connRules = $('#connector_rules');\n      if (!connRules.length) {\n        connRules = $('<style id=\"connector_rules\"></style>').appendTo('head');\n      }\n      connRules.text(!on ? '' : '#tool_clone, #tool_topath, #tool_angle, #xy_panel { display: none !important; }');\n      $('#connector_panel').toggle(on);\n    }\n\n    /**\n     * @param {Element} elem\n     * @param {Integer|\"end\"} pos\n     * @param {Float} x\n     * @param {Float} y\n     * @param {boolean} [setMid]\n     * @returns {void}\n    */\n    function setPoint (elem, pos, x, y, setMid) {\n      const pts = elem.points;\n      const pt = svgroot.createSVGPoint();\n      pt.x = x;\n      pt.y = y;\n      if (pos === 'end') { pos = pts.numberOfItems - 1; }\n      // TODO: Test for this on init, then use alt only if needed\n      try {\n        pts.replaceItem(pt, pos);\n      } catch (err) {\n        // Should only occur in FF which formats points attr as \"n,n n,n\", so just split\n        const ptArr = elem.getAttribute('points').split(' ');\n        for (let i = 0; i < ptArr.length; i++) {\n          if (i === pos) {\n            ptArr[i] = x + ',' + y;\n          }\n        }\n        elem.setAttribute('points', ptArr.join(' '));\n      }\n\n      if (setMid) {\n        // Add center point\n        const ptStart = pts.getItem(0);\n        const ptEnd = pts.getItem(pts.numberOfItems - 1);\n        setPoint(elem, 1, (ptEnd.x + ptStart.x) / 2, (ptEnd.y + ptStart.y) / 2);\n      }\n    }\n\n    /**\n    * @param {Float} diffX\n    * @param {Float} diffY\n    * @returns {void}\n    */\n    function updateLine (diffX, diffY) {\n      // Update line with element\n      let i = connections.length;\n      while (i--) {\n        const conn = connections[i];\n        const line = conn.connector;\n        // const {elem} = conn;\n\n        const pre = conn.is_start ? 'start' : 'end';\n        // const sw = line.getAttribute('stroke-width') * 5;\n\n        // Update bbox for this element\n        const bb = elData(line, pre + '_bb');\n        bb.x = conn.start_x + diffX;\n        bb.y = conn.start_y + diffY;\n        elData(line, pre + '_bb', bb);\n\n        const altPre = conn.is_start ? 'end' : 'start';\n\n        // Get center pt of connected element\n        const bb2 = elData(line, altPre + '_bb');\n        const srcX = bb2.x + bb2.width / 2;\n        const srcY = bb2.y + bb2.height / 2;\n\n        // Set point of element being moved\n        const pt = getBBintersect(srcX, srcY, bb, getOffset(pre, line)); // $(line).data(pre+'_off')?sw:0\n        setPoint(line, conn.is_start ? 0 : 'end', pt.x, pt.y, true);\n\n        // Set point of connected element\n        const pt2 = getBBintersect(pt.x, pt.y, elData(line, altPre + '_bb'), getOffset(altPre, line));\n        setPoint(line, conn.is_start ? 'end' : 0, pt2.x, pt2.y, true);\n      }\n    }\n\n    /**\n    *\n    * @param {Element[]} [elems=selElems] Array of elements\n    * @returns {void}\n    */\n    function findConnectors (elems = selElems) {\n      const connectors = $(svgcontent).find(connSel);\n      connections = [];\n\n      // Loop through connectors to see if one is connected to the element\n      connectors.each(function () {\n        let addThis;\n        /**\n        *\n        * @returns {void}\n        */\n        function add () {\n          if (elems.includes(this)) {\n            // Pretend this element is selected\n            addThis = true;\n          }\n        }\n\n        // Grab the ends\n        const parts = [];\n        ['start', 'end'].forEach(function (pos, i) {\n          const key = 'c_' + pos;\n          let part = elData(this, key);\n          if (part === null || part === undefined) { // Does this ever return nullish values?\n            part = document.getElementById(\n              this.attributes['se:connector'].value.split(' ')[i]\n            );\n            elData(this, 'c_' + pos, part.id);\n            elData(this, pos + '_bb', svgCanvas.getStrokedBBox([part]));\n          } else part = document.getElementById(part);\n          parts.push(part);\n        }, this);\n\n        for (let i = 0; i < 2; i++) {\n          const cElem = parts[i];\n\n          addThis = false;\n          // The connected element might be part of a selected group\n          $(cElem).parents().each(add);\n\n          if (!cElem || !cElem.parentNode) {\n            $(this).remove();\n            continue;\n          }\n          if (elems.includes(cElem) || addThis) {\n            const bb = svgCanvas.getStrokedBBox([cElem]);\n            connections.push({\n              elem: cElem,\n              connector: this,\n              is_start: (i === 0),\n              start_x: bb.x,\n              start_y: bb.y\n            });\n          }\n        }\n      });\n    }\n\n    /**\n    * @param {Element[]} [elems=selElems]\n    * @returns {void}\n    */\n    function updateConnectors (elems) {\n      // Updates connector lines based on selected elements\n      // Is not used on mousemove, as it runs getStrokedBBox every time,\n      // which isn't necessary there.\n      findConnectors(elems);\n      if (connections.length) {\n        // Update line with element\n        let i = connections.length;\n        while (i--) {\n          const conn = connections[i];\n          const line = conn.connector;\n          const {elem} = conn;\n\n          // const sw = line.getAttribute('stroke-width') * 5;\n          const pre = conn.is_start ? 'start' : 'end';\n\n          // Update bbox for this element\n          const bb = svgCanvas.getStrokedBBox([elem]);\n          bb.x = conn.start_x;\n          bb.y = conn.start_y;\n          elData(line, pre + '_bb', bb);\n          /* const addOffset = */ elData(line, pre + '_off');\n\n          const altPre = conn.is_start ? 'end' : 'start';\n\n          // Get center pt of connected element\n          const bb2 = elData(line, altPre + '_bb');\n          const srcX = bb2.x + bb2.width / 2;\n          const srcY = bb2.y + bb2.height / 2;\n\n          // Set point of element being moved\n          let pt = getBBintersect(srcX, srcY, bb, getOffset(pre, line));\n          setPoint(line, conn.is_start ? 0 : 'end', pt.x, pt.y, true);\n\n          // Set point of connected element\n          const pt2 = getBBintersect(pt.x, pt.y, elData(line, altPre + '_bb'), getOffset(altPre, line));\n          setPoint(line, conn.is_start ? 'end' : 0, pt2.x, pt2.y, true);\n\n          // Update points attribute manually for webkit\n          if (navigator.userAgent.includes('AppleWebKit')) {\n            const pts = line.points;\n            const len = pts.numberOfItems;\n            const ptArr = [];\n            for (let j = 0; j < len; j++) {\n              pt = pts.getItem(j);\n              ptArr[j] = pt.x + ',' + pt.y;\n            }\n            line.setAttribute('points', ptArr.join(' '));\n          }\n        }\n      }\n    }\n\n    // Do once\n    (function () {\n      const gse = svgCanvas.groupSelectedElements;\n\n      svgCanvas.groupSelectedElements = function (...args) {\n        svgCanvas.removeFromSelection($(connSel).toArray());\n        return gse.apply(this, args);\n      };\n\n      const mse = svgCanvas.moveSelectedElements;\n\n      svgCanvas.moveSelectedElements = function (...args) {\n        const cmd = mse.apply(this, args);\n        updateConnectors();\n        return cmd;\n      };\n\n      seNs = svgCanvas.getEditorNS();\n    }());\n\n    /**\n    * Do on reset.\n    * @returns {void}\n    */\n    function init () {\n      // Make sure all connectors have data set\n      $(svgcontent).find('*').each(function () {\n        const conn = this.getAttributeNS(seNs, 'connector');\n        if (conn) {\n          this.setAttribute('class', connSel.substr(1));\n          const connData = conn.split(' ');\n          const sbb = svgCanvas.getStrokedBBox([getElem(connData[0])]);\n          const ebb = svgCanvas.getStrokedBBox([getElem(connData[1])]);\n          $(this).data('c_start', connData[0])\n            .data('c_end', connData[1])\n            .data('start_bb', sbb)\n            .data('end_bb', ebb);\n          svgCanvas.getEditorNS(true);\n        }\n      });\n      // updateConnectors();\n    }\n\n    // $(svgroot).parent().mousemove(function (e) {\n    // // if (started\n    // //   || svgCanvas.getMode() !== 'connector'\n    // //  || e.target.parentNode.parentNode !== svgcontent) return;\n    //\n    // console.log('y')\n    // // if (e.target.parentNode.parentNode === svgcontent) {\n    // //\n    // // }\n    // });\n\n    const buttons = [{\n      id: 'mode_connect',\n      type: 'mode',\n      icon: svgEditor.curConfig.imgPath + 'cut.png',\n      includeWith: {\n        button: '#tool_line',\n        isDefault: false,\n        position: 1\n      },\n      events: {\n        click () {\n          svgCanvas.setMode('connector');\n        }\n      }\n    }];\n\n    return {\n      name: strings.name,\n      svgicons: svgEditor.curConfig.imgPath + 'conn.svg',\n      buttons: strings.buttons.map((button, i) => {\n        return Object.assign(buttons[i], button);\n      }),\n      /* async */ addLangData ({lang}) { // , importLocale: importLoc\n        return {\n          data: strings.langList\n        };\n      },\n      mouseDown (opts) {\n        const e = opts.event;\n        startX = opts.start_x;\n        startY = opts.start_y;\n        const mode = svgCanvas.getMode();\n        const {curConfig: {initStroke}} = svgEditor;\n\n        if (mode === 'connector') {\n          if (started) { return undefined; }\n\n          const mouseTarget = e.target;\n\n          const parents = $(mouseTarget).parents();\n\n          if ($.inArray(svgcontent, parents) !== -1) {\n            // Connectable element\n\n            // If child of foreignObject, use parent\n            const fo = $(mouseTarget).closest('foreignObject');\n            startElem = fo.length ? fo[0] : mouseTarget;\n\n            // Get center of source element\n            const bb = svgCanvas.getStrokedBBox([startElem]);\n            const x = bb.x + bb.width / 2;\n            const y = bb.y + bb.height / 2;\n\n            started = true;\n            curLine = addElem({\n              element: 'polyline',\n              attr: {\n                id: svgCanvas.getNextId(),\n                points: (x + ',' + y + ' ' + x + ',' + y + ' ' + startX + ',' + startY),\n                stroke: '#' + initStroke.color,\n                'stroke-width': (!startElem.stroke_width || startElem.stroke_width === 0)\n                  ? initStroke.width\n                  : startElem.stroke_width,\n                fill: 'none',\n                opacity: initStroke.opacity,\n                style: 'pointer-events:none'\n              }\n            });\n            elData(curLine, 'start_bb', bb);\n          }\n          return {\n            started: true\n          };\n        }\n        if (mode === 'select') {\n          findConnectors();\n        }\n        return undefined;\n      },\n      mouseMove (opts) {\n        const zoom = svgCanvas.getZoom();\n        // const e = opts.event;\n        const x = opts.mouse_x / zoom;\n        const y = opts.mouse_y / zoom;\n\n        const diffX = x - startX,\n          diffY = y - startY;\n\n        const mode = svgCanvas.getMode();\n\n        if (mode === 'connector' && started) {\n          // const sw = curLine.getAttribute('stroke-width') * 3;\n          // Set start point (adjusts based on bb)\n          const pt = getBBintersect(x, y, elData(curLine, 'start_bb'), getOffset('start', curLine));\n          startX = pt.x;\n          startY = pt.y;\n\n          setPoint(curLine, 0, pt.x, pt.y, true);\n\n          // Set end point\n          setPoint(curLine, 'end', x, y, true);\n        } else if (mode === 'select') {\n          let slen = selElems.length;\n          while (slen--) {\n            const elem = selElems[slen];\n            // Look for selected connector elements\n            if (elem && elData(elem, 'c_start')) {\n              // Remove the \"translate\" transform given to move\n              svgCanvas.removeFromSelection([elem]);\n              svgCanvas.getTransformList(elem).clear();\n            }\n          }\n          if (connections.length) {\n            updateLine(diffX, diffY);\n          }\n        }\n      },\n      mouseUp (opts) {\n        // const zoom = svgCanvas.getZoom();\n        const e = opts.event;\n        // , x = opts.mouse_x / zoom,\n        // , y = opts.mouse_y / zoom,\n        let mouseTarget = e.target;\n\n        if (svgCanvas.getMode() !== 'connector') {\n          return undefined;\n        }\n        const fo = $(mouseTarget).closest('foreignObject');\n        if (fo.length) { mouseTarget = fo[0]; }\n\n        const parents = $(mouseTarget).parents();\n\n        if (mouseTarget === startElem) {\n          // Start line through click\n          started = true;\n          return {\n            keep: true,\n            element: null,\n            started\n          };\n        }\n        if ($.inArray(svgcontent, parents) === -1) {\n          // Not a valid target element, so remove line\n          $(curLine).remove();\n          started = false;\n          return {\n            keep: false,\n            element: null,\n            started\n          };\n        }\n        // Valid end element\n        endElem = mouseTarget;\n\n        const startId = startElem.id, endId = endElem.id;\n        const connStr = startId + ' ' + endId;\n        const altStr = endId + ' ' + startId;\n        // Don't create connector if one already exists\n        const dupe = $(svgcontent).find(connSel).filter(function () {\n          const conn = this.getAttributeNS(seNs, 'connector');\n          if (conn === connStr || conn === altStr) { return true; }\n          return false;\n        });\n        if (dupe.length) {\n          $(curLine).remove();\n          return {\n            keep: false,\n            element: null,\n            started: false\n          };\n        }\n\n        const bb = svgCanvas.getStrokedBBox([endElem]);\n\n        const pt = getBBintersect(startX, startY, bb, getOffset('start', curLine));\n        setPoint(curLine, 'end', pt.x, pt.y, true);\n        $(curLine)\n          .data('c_start', startId)\n          .data('c_end', endId)\n          .data('end_bb', bb);\n        seNs = svgCanvas.getEditorNS(true);\n        curLine.setAttributeNS(seNs, 'se:connector', connStr);\n        curLine.setAttribute('class', connSel.substr(1));\n        curLine.setAttribute('opacity', 1);\n        svgCanvas.addToSelection([curLine]);\n        svgCanvas.moveToBottomSelectedElement();\n        selManager.requestSelector(curLine).showGrips(false);\n        started = false;\n        return {\n          keep: true,\n          element: curLine,\n          started\n        };\n      },\n      selectedChanged (opts) {\n        // TODO: Find better way to skip operations if no connectors are in use\n        if (!$(svgcontent).find(connSel).length) { return; }\n\n        if (svgCanvas.getMode() === 'connector') {\n          svgCanvas.setMode('select');\n        }\n\n        // Use this to update the current selected elements\n        selElems = opts.elems;\n\n        let i = selElems.length;\n        while (i--) {\n          const elem = selElems[i];\n          if (elem && elData(elem, 'c_start')) {\n            selManager.requestSelector(elem).showGrips(false);\n            if (opts.selectedElement && !opts.multiselected) {\n              // TODO: Set up context tools and hide most regular line tools\n              showPanel(true);\n            } else {\n              showPanel(false);\n            }\n          } else {\n            showPanel(false);\n          }\n        }\n        updateConnectors();\n      },\n      elementChanged (opts) {\n        let elem = opts.elems[0];\n        if (!elem) return;\n        if (elem.tagName === 'svg' && elem.id === 'svgcontent') {\n          // Update svgcontent (can change on import)\n          svgcontent = elem;\n          init();\n        }\n\n        // Has marker, so change offset\n        if (\n          elem.getAttribute('marker-start') ||\n          elem.getAttribute('marker-mid') ||\n          elem.getAttribute('marker-end')\n        ) {\n          const start = elem.getAttribute('marker-start');\n          const mid = elem.getAttribute('marker-mid');\n          const end = elem.getAttribute('marker-end');\n          curLine = elem;\n          $(elem)\n            .data('start_off', Boolean(start))\n            .data('end_off', Boolean(end));\n\n          if (elem.tagName === 'line' && mid) {\n            // Convert to polyline to accept mid-arrow\n\n            const x1 = Number(elem.getAttribute('x1'));\n            const x2 = Number(elem.getAttribute('x2'));\n            const y1 = Number(elem.getAttribute('y1'));\n            const y2 = Number(elem.getAttribute('y2'));\n            const {id} = elem;\n\n            const midPt = (' ' + ((x1 + x2) / 2) + ',' + ((y1 + y2) / 2) + ' ');\n            const pline = addElem({\n              element: 'polyline',\n              attr: {\n                points: (x1 + ',' + y1 + midPt + x2 + ',' + y2),\n                stroke: elem.getAttribute('stroke'),\n                'stroke-width': elem.getAttribute('stroke-width'),\n                'marker-mid': mid,\n                fill: 'none',\n                opacity: elem.getAttribute('opacity') || 1\n              }\n            });\n            $(elem).after(pline).remove();\n            svgCanvas.clearSelection();\n            pline.id = id;\n            svgCanvas.addToSelection([pline]);\n            elem = pline;\n          }\n        }\n        // Update line if it's a connector\n        if (elem.getAttribute('class') === connSel.substr(1)) {\n          const start = getElem(elData(elem, 'c_start'));\n          updateConnectors([start]);\n        } else {\n          updateConnectors();\n        }\n      },\n      IDsUpdated (input) {\n        const remove = [];\n        input.elems.forEach(function (elem) {\n          if ('se:connector' in elem.attr) {\n            elem.attr['se:connector'] = elem.attr['se:connector'].split(' ')\n              .map(function (oldID) { return input.changes[oldID]; }).join(' ');\n\n            // Check validity - the field would be something like 'svg_21 svg_22', but\n            // if one end is missing, it would be 'svg_21' and therefore fail this test\n            if (!(/. ./).test(elem.attr['se:connector'])) {\n              remove.push(elem.attr.id);\n            }\n          }\n        });\n        return {remove};\n      },\n      toolButtonStateUpdate (opts) {\n        if (opts.nostroke) {\n          if ($('#mode_connect').hasClass('tool_button_current')) {\n            svgEditor.clickSelect();\n          }\n        }\n        $('#mode_connect')\n          .toggleClass('disabled', opts.nostroke);\n      }\n    };\n  }\n};\n"],"names":["name","init","S","getBBintersect","getOffset","showPanel","setPoint","updateLine","findConnectors","updateConnectors","$","svgcontent","find","each","conn","getAttributeNS","seNs","setAttribute","connSel","substr","connData","split","sbb","svgCanvas","getStrokedBBox","getElem","ebb","data","getEditorNS","elems","connections","length","i","line","connector","elem","pre","is_start","bb","x","start_x","y","start_y","elData","altPre","bb2","srcX","width","srcY","height","pt","pt2","navigator","userAgent","includes","pts","points","len","numberOfItems","ptArr","j","getItem","join","selElems","connectors","addThis","add","parts","forEach","pos","key","part","undefined","document","getElementById","attributes","value","id","push","cElem","parents","parentNode","remove","diffX","diffY","setMid","svgroot","createSVGPoint","replaceItem","err","getAttribute","ptStart","ptEnd","on","connRules","appendTo","text","toggle","side","giveOffset","size","offset","extend","midX","midY","lenX","lenY","slope","Math","abs","ratio","svgEditor","canvas","importLocale","addElem","addSVGElementFromJson","selManager","selectorManager","strings","started","gse","groupSelectedElements","removeFromSelection","toArray","args","apply","mse","moveSelectedElements","cmd","buttons","type","icon","curConfig","imgPath","includeWith","button","isDefault","position","events","click","setMode","svgicons","map","Object","assign","addLangData","lang","langList","mouseDown","opts","e","event","startX","startY","mode","getMode","initStroke","mouseTarget","target","inArray","fo","closest","startElem","curLine","element","attr","getNextId","stroke","color","stroke_width","fill","opacity","style","mouseMove","zoom","getZoom","mouse_x","mouse_y","slen","getTransformList","clear","mouseUp","keep","endElem","startId","endId","connStr","altStr","dupe","filter","setAttributeNS","addToSelection","moveToBottomSelectedElement","requestSelector","showGrips","selectedChanged","selectedElement","multiselected","elementChanged","tagName","start","mid","end","Boolean","x1","Number","x2","y1","y2","midPt","pline","after","clearSelection","IDsUpdated","input","oldID","changes","test","toolButtonStateUpdate","nostroke","hasClass","clickSelect","toggleClass"],"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"}