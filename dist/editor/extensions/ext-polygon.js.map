{"version":3,"file":"ext-polygon.js","sources":["../../../src/editor/extensions/polygon-icons.svg","../../../src/editor/extensions/ext-polygon.js"],"sourcesContent":["export default \"polygon-icons.svg\"","/**\n * @file ext-polygon.js\n *\n *\n * @copyright 2010 CloudCanvas, Inc. All rights reserved\n *\n */\n\nimport './polygon-icons.svg';\n\nexport default {\n  name: 'polygon',\n  async init (S) {\n    const svgEditor = this;\n    const svgCanvas = svgEditor.canvas;\n    const {$, importLocale} = S, // {svgcontent}\n      // addElem = svgCanvas.addSVGElementFromJson,\n      editingitex = false;\n    const strings = await importLocale();\n    let selElems,\n      // svgdoc = S.svgroot.parentNode.ownerDocument,\n      // newFOG, newFOGParent, newDef, newImageName, newMaskID, modeChangeG,\n      // edg = 0,\n      // undoCommand = 'Not image';\n      started, newFO;\n\n    // const ccZoom;\n    // const wEl, hEl;\n    // const wOffset, hOffset;\n    // const ccRBG;\n    // const ccOpacity;\n    // const brushW, brushH;\n\n    // const ccDebug = document.getElementById('debugpanel');\n\n    /* const properlySourceSizeTextArea = function(){\n     // TODO: remove magic numbers here and get values from CSS\n     const height = $('#svg_source_container').height() - 80;\n     $('#svg_source_textarea').css('height', height);\n     }; */\n\n    /**\n    * @param {boolean} on\n    * @returns {void}\n    */\n    function showPanel (on) {\n      let fcRules = $('#fc_rules');\n      if (!fcRules.length) {\n        fcRules = $('<style id=\"fc_rules\"></style>').appendTo('head');\n      }\n      fcRules.text(!on ? '' : ' #tool_topath { display: none !important; }');\n      $('#polygon_panel').toggle(on);\n    }\n\n    /*\n    function toggleSourceButtons(on){\n      $('#tool_source_save, #tool_source_cancel').toggle(!on);\n      $('#polygon_save, #polygon_cancel').toggle(on);\n    }\n    */\n\n    /**\n    * @param {string} attr\n    * @param {string|Float} val\n    * @returns {void}\n    */\n    function setAttr (attr, val) {\n      svgCanvas.changeSelectedAttribute(attr, val);\n      svgCanvas.call('changed', selElems);\n    }\n\n    /**\n    * @param {Float} n\n    * @returns {Float}\n    */\n    function cot (n) {\n      return 1 / Math.tan(n);\n    }\n\n    /**\n    * @param {Float} n\n    * @returns {Float}\n    */\n    function sec (n) {\n      return 1 / Math.cos(n);\n    }\n\n    /**\n    * Obtained from http://code.google.com/p/passenger-top/source/browse/instiki/public/svg-edit/editor/extensions/ext-itex.js?r=3\n    * This function sets the content of of the currently-selected foreignObject element,\n    *   based on the itex contained in string.\n    * @param {string} tex The itex text.\n    * @returns {boolean} This function returns false if the set was unsuccessful, true otherwise.\n    */\n    /*\n    function setItexString(tex) {\n      const mathns = 'http://www.w3.org/1998/Math/MathML',\n        xmlnsns = 'http://www.w3.org/2000/xmlns/',\n        ajaxEndpoint = '../../itex';\n      const elt = selElems[0];\n      try {\n        const math = svgdoc.createElementNS(mathns, 'math');\n        math.setAttributeNS(xmlnsns, 'xmlns', mathns);\n        math.setAttribute('display', 'inline');\n        const semantics = document.createElementNS(mathns, 'semantics');\n        const annotation = document.createElementNS(mathns, 'annotation');\n        annotation.setAttribute('encoding', 'application/x-tex');\n        annotation.textContent = tex;\n        const mrow = document.createElementNS(mathns, 'mrow');\n        semantics.append(mrow, annotation);\n        math.append(semantics);\n        // make an AJAX request to the server, to get the MathML\n        $.post(ajaxEndpoint, {tex, display: 'inline'}, function(data){\n          const children = data.documentElement.childNodes;\n          while (children.length > 0) {\n             mrow.append(svgdoc.adoptNode(children[0], true));\n          }\n          svgCanvas.sanitizeSvg(math);\n          svgCanvas.call('changed', [elt]);\n        });\n        elt.firstChild.replaceWith(math);\n        svgCanvas.call('changed', [elt]);\n        svgCanvas.clearSelection();\n      } catch(e) {\n        console.log(e);\n        return false;\n      }\n\n      return true;\n    }\n    */\n    const buttons = [{\n      id: 'tool_polygon',\n      icon: svgEditor.curConfig.extIconsPath + 'polygon.png',\n      type: 'mode',\n      position: 11,\n      events: {\n        click () {\n          svgCanvas.setMode('polygon');\n          showPanel(true);\n        }\n      }\n    }];\n    const contextTools = [{\n      type: 'input',\n      panel: 'polygon_panel',\n      id: 'polySides',\n      size: 3,\n      defval: 5,\n      events: {\n        change () {\n          setAttr('sides', this.value);\n        }\n      }\n    }];\n    return {\n      name: strings.name,\n      svgicons: svgEditor.curConfig.extIconsPath + 'polygon-icons.svg',\n      buttons: strings.buttons.map((button, i) => {\n        return Object.assign(buttons[i], button);\n      }),\n      context_tools: strings.contextTools.map((contextTool, i) => {\n        return Object.assign(contextTools[i], contextTool);\n      }),\n\n      callback () {\n        $('#polygon_panel').hide();\n\n        const endChanges = function () {\n          // Todo: Missing?\n        };\n\n        // TODO: Needs to be done after orig icon loads\n        setTimeout(function () {\n          // Create source save/cancel buttons\n          /* const save = */ $('#tool_source_save').clone().hide().attr(\n            'id', 'polygon_save'\n          ).unbind().appendTo(\n            '#tool_source_back'\n          ).click(function () {\n            if (!editingitex) {\n              return;\n            }\n            // Todo: Uncomment the setItexString() function above and handle ajaxEndpoint?\n            /*\n            if (!setItexString($('#svg_source_textarea').val())) {\n              const ok = await $.confirm('Errors found. Revert to original?', function (ok) {\n              if (!ok) {\n                return false;\n              }\n              endChanges();\n            } else { */\n            endChanges();\n            // }\n            // setSelectMode();\n          });\n\n          /* const cancel = */ $('#tool_source_cancel').clone().hide().attr(\n            'id', 'polygon_cancel'\n          ).unbind().appendTo('#tool_source_back').click(function () {\n            endChanges();\n          });\n        }, 3000);\n      },\n      mouseDown (opts) {\n        if (svgCanvas.getMode() !== 'polygon') {\n          return undefined;\n        }\n        // const e = opts.event;\n        const rgb = svgCanvas.getColor('fill');\n        // const ccRgbEl = rgb.substring(1, rgb.length);\n        const sRgb = svgCanvas.getColor('stroke');\n        // ccSRgbEl = sRgb.substring(1, rgb.length);\n        const sWidth = svgCanvas.getStrokeWidth();\n\n        started = true;\n\n        newFO = svgCanvas.addSVGElementFromJson({\n          element: 'polygon',\n          attr: {\n            cx: opts.start_x,\n            cy: opts.start_y,\n            id: svgCanvas.getNextId(),\n            shape: 'regularPoly',\n            sides: document.getElementById('polySides').value,\n            orient: 'x',\n            edge: 0,\n            fill: rgb,\n            strokecolor: sRgb,\n            strokeWidth: sWidth\n          }\n        });\n\n        return {\n          started: true\n        };\n      },\n      mouseMove (opts) {\n        if (!started || svgCanvas.getMode() !== 'polygon') {\n          return undefined;\n        }\n        // const e = opts.event;\n        const c = $(newFO).attr(['cx', 'cy', 'sides', 'orient', 'fill', 'strokecolor', 'strokeWidth']);\n        let x = opts.mouse_x;\n        let y = opts.mouse_y;\n        const {cx, cy, fill, strokecolor, strokeWidth, sides} = c, // {orient} = c,\n          edg = (Math.sqrt((x - cx) * (x - cx) + (y - cy) * (y - cy))) / 1.5;\n        newFO.setAttribute('edge', edg);\n\n        const inradius = (edg / 2) * cot(Math.PI / sides);\n        const circumradius = inradius * sec(Math.PI / sides);\n        let points = '';\n        for (let s = 0; sides >= s; s++) {\n          const angle = 2.0 * Math.PI * s / sides;\n          x = (circumradius * Math.cos(angle)) + cx;\n          y = (circumradius * Math.sin(angle)) + cy;\n\n          points += x + ',' + y + ' ';\n        }\n\n        // const poly = newFO.createElementNS(NS.SVG, 'polygon');\n        newFO.setAttribute('points', points);\n        newFO.setAttribute('fill', fill);\n        newFO.setAttribute('stroke', strokecolor);\n        newFO.setAttribute('stroke-width', strokeWidth);\n        // newFO.setAttribute('transform', 'rotate(-90)');\n        // const shape = newFO.getAttribute('shape');\n        // newFO.append(poly);\n        // DrawPoly(cx, cy, sides, edg, orient);\n        return {\n          started: true\n        };\n      },\n\n      mouseUp (opts) {\n        if (svgCanvas.getMode() !== 'polygon') {\n          return undefined;\n        }\n        const attrs = $(newFO).attr('edge');\n        const keep = (attrs.edge !== '0');\n        // svgCanvas.addToSelection([newFO], true);\n        return {\n          keep,\n          element: newFO\n        };\n      },\n      selectedChanged (opts) {\n        // Use this to update the current selected elements\n        selElems = opts.elems;\n\n        let i = selElems.length;\n        while (i--) {\n          const elem = selElems[i];\n          if (elem && elem.getAttribute('shape') === 'regularPoly') {\n            if (opts.selectedElement && !opts.multiselected) {\n              $('#polySides').val(elem.getAttribute('sides'));\n\n              showPanel(true);\n            } else {\n              showPanel(false);\n            }\n          } else {\n            showPanel(false);\n          }\n        }\n      },\n      elementChanged (opts) {\n        // const elem = opts.elems[0];\n      }\n    };\n  }\n};\n"],"names":["name","init","S","showPanel","setAttr","cot","sec","n","Math","cos","tan","attr","val","svgCanvas","changeSelectedAttribute","call","selElems","on","fcRules","$","length","appendTo","text","toggle","svgEditor","canvas","importLocale","editingitex","strings","buttons","id","icon","curConfig","extIconsPath","type","position","events","click","setMode","contextTools","panel","size","defval","change","value","svgicons","map","button","i","Object","assign","context_tools","contextTool","callback","hide","endChanges","setTimeout","clone","unbind","mouseDown","opts","getMode","undefined","rgb","getColor","sRgb","sWidth","getStrokeWidth","started","newFO","addSVGElementFromJson","element","cx","start_x","cy","start_y","getNextId","shape","sides","document","getElementById","orient","edge","fill","strokecolor","strokeWidth","mouseMove","c","x","mouse_x","y","mouse_y","edg","sqrt","setAttribute","inradius","PI","circumradius","points","s","angle","sin","mouseUp","attrs","keep","selectedChanged","elems","elem","getAttribute","selectedElement","multiselected","elementChanged"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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"}