function _typeof(r){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}function _toConsumableArray(r){return function _arrayWithoutHoles(r){if(Array.isArray(r))return _arrayLikeToArray(r)}(r)||function _iterableToArray(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function _unsupportedIterableToArray(r,t){if(!r)return;if("string"==typeof r)return _arrayLikeToArray(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return _arrayLikeToArray(r,t)}(r)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,o=new Array(t);e<t;e++)o[e]=r[e];return o}var r={name:"xdomain-messaging",init:function init(){var r=this,t=r.canvas;try{window.addEventListener("message",(function(e){if(e.data&&["string","object"].includes(_typeof(e.data))&&"|"!==e.data.charAt()){var o="object"===_typeof(e.data)?e.data:JSON.parse(e.data);if(o&&"object"===_typeof(o)&&"svgCanvas"===o.namespace){var n=r.curConfig.allowedOrigins;if(n.includes("*")||n.includes(e.origin)){var a=o.id,i=o.name,s=o.args,y={namespace:"svg-edit",id:a};try{y.result=t[i].apply(t,_toConsumableArray(s))}catch(r){y.error=r.message}e.source.postMessage(JSON.stringify(y),"*")}else console.log("Origin ".concat(e.origin," not whitelisted for posting to ").concat(window.origin))}}}))}catch(r){console.log("Error with xdomain message listener: "+r)}}};export default r;
//# sourceMappingURL=ext-xdomain-messaging.js.map
